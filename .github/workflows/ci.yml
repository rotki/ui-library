name: ci

on:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - main
      - develop
      - bugfixes
  pull_request:
    branches:
      - main
      - develop
      - bugfixes

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version-file: .nvmrc

      - name: Install dependencies 👨🏻‍💻
        run: pnpm install --frozen-lockfile

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: pnpm exec commitlint --from HEAD~1 --to HEAD --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: pnpm exec commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Setup node env 🏗
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version-file: .nvmrc

      - name: Setup cypress cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-cache-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cypress-cache-

      - name: Install dependencies 👨🏻‍💻
        run: pnpm install --frozen-lockfile

      - name: Run linter 👀
        run: pnpm run lint

      - name: Build
        run: pnpm run build:prod

      - name: Build Storybook
        run: pnpm run build:storybook

      - name: Test
        run: pnpm run coverage

      - name: Typecheck
        run: pnpm run typecheck

      - name: Typecheck example
        run: pnpm run --filter {example} typecheck

      - name: Install cypress binary
        working-directory: example
        run: pnpm exec cypress install

      - name: Run cypress tests
        uses: cypress-io/github-action@v5
        with:
          install: false
          working-directory: example
          build: pnpm run build:app
          command: pnpm exec cypress run --e2e
          start: pnpm run preview --host
          browser: chrome
          wait-on: http://127.0.0.1:4173

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: example/cypress/e2e/screenshots
          retention-days: 7

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: example/cypress/e2e/videos
          retention-days: 7

      - name: Upload coverage
        uses: codecov/codecov-action@v3
